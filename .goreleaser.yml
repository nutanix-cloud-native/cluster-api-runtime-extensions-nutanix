# Copyright 2023 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

version: 2

project_name: cluster-api-runtime-extensions-nutanix

changelog:
  use: github
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
  filters:
    exclude:
      - '^docs:'
      - '^chore:'
      - '^build:'

release:
  footer: |
    ### Summary
    **Full Changelog**: https://github.com/nutanix-cloud-native/{{.ProjectName}}/compare/{{ .PreviousTag }}...{{ .Tag }}
  extra_files:
    - glob: ./examples/capi-quick-start/*.yaml
    - glob: release-metadata.yaml
      name_template: metadata.yaml
    - glob: runtime-extension-components.yaml
    - glob: ./charts/{{ .ProjectName }}/defaultclusterclasses/*.yaml

before:
  hooks:
    - |
      sh -ec 'cat <<EOF > runtime-extension-components.yaml
      apiVersion: v1
      kind: Namespace
      metadata:
        name: caren-system
      $(helm template {{ .ProjectName }} ./charts/{{ .ProjectName }} \
        --namespace caren-system \
        --set-string image.tag=v{{ trimprefix .Version "v" }} \
        {{ if .IsSnapshot }}--set-string image.repository=ko.local/{{ .ProjectName }}{{ end }} \
      )
      EOF'
    - sed -i -e 's/\${/$${/g' -e 's/v0.0.0-dev/v{{ trimprefix .Version "v" }}/g' runtime-extension-components.yaml
    - |
      sh -ec 'gojq --yaml-input --yaml-output \
        ".releaseSeries |= (. + [{contract: \"v1beta1\", major: {{ .Major }}, minor: {{ .Minor }}}] | unique)" \
        metadata.yaml >release-metadata.yaml'

builds:
  - id: cluster-api-runtime-extensions-nutanix
    dir: ./cmd
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X 'k8s.io/component-base/version.buildDate={{ .CommitDate }}'
      - -X 'k8s.io/component-base/version.gitCommit={{ .FullCommit }}'
      - -X 'k8s.io/component-base/version.gitTreeState={{ .Env.GIT_TREE_STATE }}'
      - -X 'k8s.io/component-base/version.gitVersion=v{{ trimprefix .Version "v" }}'
      - -X 'k8s.io/component-base/version.major={{ .Major }}'
      - -X 'k8s.io/component-base/version.minor={{ .Minor }}'
      - -X 'k8s.io/component-base/version/verflag.programName={{ .ProjectName }}'
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    hooks:
      post:
        - |
          sh -ec 'if [ {{ .IsSnapshot }} == true ] && [ {{ .Runtime.Goarch }} == {{ .Arch }} ]; then
            env GOOS=linux GOARCH={{ .Arch }} \
                SOURCE_DATE_EPOCH=$(date +%s) \
                KO_DOCKER_REPO=ko.local/{{ .ProjectName }} \
                ko build \
                  --bare \
                  -t v{{ trimprefix .Version "v" }} \
                  ./cmd
          fi'

archives:
  - name_template: '{{ .ProjectName }}_v{{ trimprefix .Version "v" }}_{{ .Os }}_{{ .Arch }}'
    builds:
      - cluster-api-runtime-extensions-nutanix

kos:
  - id: cluster-api-runtime-extensions-nutanix
    build: cluster-api-runtime-extensions-nutanix
    ldflags:
      - -s
      - -w
      - -X 'k8s.io/component-base/version.buildDate={{ .CommitDate }}'
      - -X 'k8s.io/component-base/version.gitCommit={{ .FullCommit }}'
      - -X 'k8s.io/component-base/version.gitTreeState={{ .Env.GIT_TREE_STATE }}'
      - -X 'k8s.io/component-base/version.gitVersion=v{{ trimprefix .Version "v" }}'
      - -X 'k8s.io/component-base/version.major={{ .Major }}'
      - -X 'k8s.io/component-base/version.minor={{ .Minor }}'
      - -X 'k8s.io/component-base/version/verflag.programName={{ .ProjectName }}'
    labels:
      org.opencontainers.image.created: "{{ .CommitDate }}"
      org.opencontainers.image.title: "{{ .ProjectName }}"
      org.opencontainers.image.revision: "{{ .FullCommit }}"
      org.opencontainers.image.version: v{{ .Version }}
      org.opencontainers.image.source: "{{ .GitURL }}"
    platforms:
      - linux/amd64
      - linux/arm64
    repository: ghcr.io/nutanix-cloud-native/cluster-api-runtime-extensions-nutanix
    bare: true
    tags:
      - v{{ trimprefix .Version "v" }}

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incminor .Tag }}-dev"
