apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start
spec:
  controlPlane:
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
        name: aws-quick-start-control-plane
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: aws-quick-start-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSClusterTemplate
      name: aws-quick-start
  patches:
  - external:
      discoverVariablesExtension: awsclusterconfigvars-dv.cluster-api-runtime-extensions-nutanix
      generateExtension: awsclusterv3configpatch-gp.cluster-api-runtime-extensions-nutanix
    name: cluster-config
  - external:
      discoverVariablesExtension: awsworkerconfigvars-dv.cluster-api-runtime-extensions-nutanix
      generateExtension: awsworkerv3configpatch-gp.cluster-api-runtime-extensions-nutanix
    name: worker-config
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/identityRef
        value:
          kind: AWSClusterControllerIdentity
          name: default
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSClusterTemplate
        matchResources:
          infrastructureCluster: true
    description: AWSClusterStaticIdentity identityRef to use when creating the cluster
    name: identityRef
  workers:
    machineDeployments:
    - class: default-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: aws-quick-start-worker-bootstraptemplate
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            name: aws-quick-start-worker-machinetemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSClusterTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start
spec:
  template:
    spec:
      controlPlaneLoadBalancer:
        healthCheckProtocol: HTTPS
        loadBalancerType: nlb
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-provider: external
              profiling: "false"
          controllerManager:
            extraArgs:
              cloud-provider: external
              profiling: "false"
          scheduler:
            extraArgs:
              profiling: "false"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ ds.meta_data.local_hostname }}'
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ ds.meta_data.local_hostname }}'
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-control-plane
spec:
  template:
    spec:
      instanceType: PLACEHOLDER
      sshKeyName: ""
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-worker-machinetemplate
spec:
  template:
    spec:
      instanceType: PLACEHOLDER
      sshKeyName: ""
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-worker-bootstraptemplate
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
          name: '{{ ds.meta_data.local_hostname }}'
