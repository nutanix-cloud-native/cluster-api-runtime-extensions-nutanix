apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start
spec:
  controlPlane:
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
        name: aws-quick-start-control-plane
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: aws-quick-start-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSClusterTemplate
      name: aws-quick-start
  patches:
  - external:
      discoverVariablesExtension: awsclusterconfigvars-dv.cluster-api-runtime-extensions-nutanix
      generateExtension: awsclusterv4configpatch-gp.cluster-api-runtime-extensions-nutanix
    name: cluster-config
  - external:
      discoverVariablesExtension: awsworkerconfigvars-dv.cluster-api-runtime-extensions-nutanix
      generateExtension: awsworkerv4configpatch-gp.cluster-api-runtime-extensions-nutanix
    name: worker-config
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/identityRef
        value:
          kind: AWSClusterControllerIdentity
          name: default
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSClusterTemplate
        matchResources:
          infrastructureCluster: true
    description: AWSClusterStaticIdentity identityRef to use when creating the cluster
    name: identityRef
  workers:
    machineDeployments:
    - class: default-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: aws-quick-start-worker-bootstraptemplate
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            name: aws-quick-start-worker-machinetemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSClusterTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start
spec:
  template:
    spec:
      controlPlaneLoadBalancer:
        healthCheckProtocol: HTTPS
        loadBalancerType: nlb
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              admission-control-config-file: /etc/kubernetes/admission.yaml
              enable-admission-plugins: DenyServiceExternalIPs,EventRateLimit,NodeRestriction
              profiling: "false"
              service-account-lookup: "true"
            extraVolumes:
            - hostPath: /etc/kubernetes/admission.yaml
              mountPath: /etc/kubernetes/admission.yaml
              name: admission-config
              pathType: File
              readOnly: true
            - hostPath: /etc/kubernetes/eventratelimit-config.yaml
              mountPath: /etc/kubernetes/eventratelimit-config.yaml
              name: eventratelimit-config
              pathType: File
              readOnly: true
          controllerManager:
            extraArgs:
              cloud-provider: external
              profiling: "false"
              terminated-pod-gc-threshold: "10000"
          scheduler:
            extraArgs:
              profiling: "false"
        files:
        - content: |
            apiVersion: kubelet.config.k8s.io/v1beta1
            kind: KubeletConfiguration
            # 4.2.4 Ensure that the --read-only-port argument is set to 0
            readOnlyPort: 0
            # 4.2.5 Ensure that the --streaming-connection-idle-timeout argument is not set to 0
            # Recommendation: Set to 5m instead of 4h as per CIS guidelines
            streamingConnectionIdleTimeout: "5m"
            # 4.2.8 Ensure that the event-qps argument is set to a level which ensures appropriate event capture
            eventRecordQPS: 5
            # 4.2.12 Updated with recommended strong cipher suites
            tlsCipherSuites: [TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384]
            # 4.2.13 Ensure that a limit is set on pod PIDs
            podPidsLimit: 4096
          path: /etc/kubernetes/patches/kubeletconfiguration1+strategic.json
          permissions: "0600"
        - content: |
            apiVersion: apiserver.config.k8s.io/v1
            kind: AdmissionConfiguration
            plugins:
            - name: EventRateLimit
              path: /etc/kubernetes/eventratelimit-config.yaml
          path: /etc/kubernetes/admission.yaml
          permissions: "0600"
        - content: |
            apiVersion: eventratelimit.admission.k8s.io/v1alpha1
            kind: Configuration
            limits:
            - type: Server
              qps: 10000
              burst: 40000
          path: /etc/kubernetes/eventratelimit-config.yaml
          permissions: "0600"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ ds.meta_data.local_hostname }}'
          patches:
            directory: /etc/kubernetes/patches
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ ds.meta_data.local_hostname }}'
          patches:
            directory: /etc/kubernetes/patches
        postKubeadmCommands:
        - chmod 600 "$(systemctl show -P FragmentPath kubelet.service)"
        - chmod 600 $(systemctl show -P DropInPaths kubelet.service)
        - chmod 600 /var/lib/kubelet/config.yaml
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-control-plane
spec:
  template:
    spec:
      instanceType: PLACEHOLDER
      sshKeyName: ""
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-worker-machinetemplate
spec:
  template:
    spec:
      instanceType: PLACEHOLDER
      sshKeyName: ""
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  labels:
    cluster.x-k8s.io/provider: aws
  name: aws-quick-start-worker-bootstraptemplate
spec:
  template:
    spec:
      files:
      - content: |
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          # 4.2.4 Ensure that the --read-only-port argument is set to 0
          readOnlyPort: 0
          # 4.2.5 Ensure that the --streaming-connection-idle-timeout argument is not set to 0
          # Recommendation: Set to 5m instead of 4h as per CIS guidelines
          streamingConnectionIdleTimeout: "5m"
          # 4.2.8 Ensure that the event-qps argument is set to a level which ensures appropriate event capture
          eventRecordQPS: 5
          # 4.2.12 Updated with recommended strong cipher suites
          tlsCipherSuites: [TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384]
          # 4.2.13 Ensure that a limit is set on pod PIDs
          podPidsLimit: 4096
        path: /etc/kubernetes/patches/kubeletconfiguration1+strategic.json
        permissions: "0600"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
          name: '{{ ds.meta_data.local_hostname }}'
        patches:
          directory: /etc/kubernetes/patches
      postKubeadmCommands:
      - chmod 600 "$(systemctl show -P FragmentPath kubelet.service)"
      - chmod 600 $(systemctl show -P DropInPaths kubelet.service)
      - chmod 600 /var/lib/kubelet/config.yaml
