# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# This file contains the manifests to run a helmRepository deployment which contains helm charts for our addons.
# The pod is built via goreleaser with configuration from hack/addons.
#
{{ if .Values.helmRepository.enabled }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: helm-repository-selfsigned
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: helm-repository-tls
  namespace: {{ .Release.Namespace }}
spec:
  dnsNames:
  - helm-repository.{{ .Release.Namespace }}.svc
  - helm-repository.{{ .Release.Namespace }}.svc.cluster.local
  issuerRef:
    name: helm-repository-selfsigned
    kind: Issuer
  secretName: helm-repository-tls
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
  - kubernetes.io/pvc-protection
  name: helm-charts-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-repository
  namespace: {{ .Release.Namespace }}
  labels:
    app: helm-repository
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: helm-repository   # deployment will track pods it generates because of this
  template:
    metadata:
      labels:
        app: helm-repository  # pods have this label, and Service and Deployment depend on it
    spec:
      initContainers:
      - name: copy-charts
        image: "{{ .Values.helmRepository.images.bundleInitializer.repository }}:{{ default $.Chart.AppVersion .Values.helmRepository.images.bundleInitializer.tag }}"
        # Copy the charts bundled in the image to the mounted PVC.
        # The combination of flags `--recursive --no-target-directory` ensure that the bundled directory contents only are copied to the destination,
        # rather than copying the source directory itself to the destination, which would lead to incorrect nesting.
        # See https://unix.stackexchange.com/a/94838 for further explanation.
        # Globs cannot be used here because we are not running in a shell and `cp` does not natively support globbing.
        command:
          - /bin/cp
          - --recursive
          - --no-target-directory
          - --verbose
          - /charts/
          - /helm-charts/bundles/
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        volumeMounts:
        - name: charts-volume
          mountPath: "/helm-charts"
      containers:
      - name: manager
        ports:
          - name: serve
            protocol: TCP
            containerPort: 5000
        image: "{{ .Values.helmRepository.images.mindthegap.repository }}:{{ .Values.helmRepository.images.mindthegap.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        args:
          - serve
          - bundle
          - --bundle=/helm-charts/bundles/helm-charts-*.tar
          - --listen-port=5000
          - --listen-address=0.0.0.0
          - --tls-private-key-file=/certs/tls.key
          - --tls-cert-file=/certs/tls.crt
        volumeMounts:
        - name: certs-vol
          mountPath: "/certs"
          readOnly: true
        - name: charts-volume
          mountPath: "/helm-charts"
          readOnly: true
        livenessProbe:
          tcpSocket:
            port: serve
        readinessProbe:
          tcpSocket:
            port: serve
          periodSeconds: 1
      priorityClassName: {{ .Values.priorityClassName }}
      securityContext:
        {{ with .Values.helmRepository.securityContext }}
        {{- toYaml . | nindent 8}}
        {{- end }}
      volumes:
      - name: certs-vol
        secret:
          secretName: helm-repository-tls
      - name: charts-volume
        persistentVolumeClaim:
          claimName: helm-charts-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: helm-repository
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: helm-repository
  ports:
  - port: 443
    targetPort: 5000
  type: ClusterIP
{{ end }}
