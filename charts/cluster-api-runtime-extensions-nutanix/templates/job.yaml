# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

# Copyright 2023 D2iQ, Inc. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: batch/v1
kind: Job
metadata:
  name: update-trust-manager-namespace
  namespace: caaph-system
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: helm-hook-sa
      containers:
        - name: kubectl
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              set -e
              # Check if volume already exists
              if kubectl get deployment caaph-controller-manager -n caaph-system -o jsonpath='{.spec.template.spec.volumes[?(@.name=="ca-certificate-only")]}' | grep -q "ca-certificate-only"; then
                echo "Volume already exists. Skipping addition."
              else
                kubectl patch deployment caaph-controller-manager \
                -n caaph-system \
                --type=json \
                -p='[
                  {
                    "op": "add",
                    "path": "/spec/template/spec/volumes/-",
                    "value": {
                      "name": "ca-certificate-only",
                      "configMap": {
                        "name": "caren-bundle",
                        "defaultMode": 420,
                        "optional": false,
                        "items": [
                          {
                            "key": "ca-certificates.crt",
                            "path": "ca-certificates.crt"
                          }
                        ]
                      }
                    }
                  }
                ]'
              fi
              if kubectl get deployment caaph-controller-manager -n caaph-system -o jsonpath='{.spec.template.spec.containers[0].volumeMounts[?(@.mountPath=="/etc/ssl/certs/")]}' | grep -q "ca-certificate-only"; then
                echo "VolumeMount already exists. Skipping addition."
              else
                kubectl patch deployment caaph-controller-manager \
                -n caaph-system \
                --type=json \
                -p='[
                  {
                    "op": "add",
                    "path": "/spec/template/spec/containers/0/volumeMounts/-",
                    "value": {
                      "mountPath": "/etc/ssl/certs/",
                      "name": "ca-certificate-only",
                      "readOnly": true
                    }
                  }
                ]'
              fi
      restartPolicy: Never
