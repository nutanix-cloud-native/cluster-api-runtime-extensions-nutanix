kind: Job
apiVersion: batch/v1
metadata:
  name: {{ .JobName }}
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      initContainers:
      - name: wait-for-registry
        image: ghcr.io/d2iq-labs/kubectl-betterwait:{{ .KubernetesVersion }}
        args:
          - --for=condition=Ready
          - --timeout=-1s # a negative number here means wait forever
          - --interval=5s # poll every 5 seconds to the resources to be created
          - --namespace={{ .DestinationNamespace }}
          - --kubeconfig=/kubeconfig/admin.conf
          - pod/{{ .DestinationPodName }}
        volumeMounts:
          - mountPath: /kubeconfig
            name: kubeconfig
            readOnly: true
      - name: port-forward-registry
        image: ghcr.io/d2iq-labs/kubectl-betterwait:{{ .KubernetesVersion }}
        command:
        - /bin/kubectl
        args:
          - port-forward
          - --address=0.0.0.0
          - --namespace={{ .DestinationNamespace }}
          - --kubeconfig=/kubeconfig/admin.conf
          - pod/{{ .DestinationPodName }}
          - 5000:5000
        volumeMounts:
          - mountPath: /kubeconfig
            name: kubeconfig
            readOnly: true
        # Kubernetes will treat this as a Sidecar container
        # https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/
        restartPolicy: Always
      containers:
      - args:
        - push
        - bundle
        - --bundle
        - /bundles-to-push/bundle-*.tar
        - --to-registry
        - http://127.0.0.1:5000
        image: ghcr.io/mesosphere/mindthegap:v1.19.0
        imagePullPolicy: IfNotPresent
        name: push-bundles-to-registry
        volumeMounts:
        {{- range $i, $_ := .BundleFiles }}
        - mountPath: /bundles-to-push/bundle-{{ add $i 1 }}.tar
          name: bundle-{{ add $i 1 }}
        {{- end }}
        - mountPath: /kubeconfig
          name: kubeconfig
          readOnly: true
      restartPolicy: OnFailure
      tolerations:
      - operator: Exists
      volumes:
      {{- range $i, $volume := .BundleFiles }}
      - name: bundle-{{ add $i 1 }}
      {{- toYAML $volume | nindent 8 -}}
      {{- end }}
      - name: kubeconfig
        secret:
          defaultMode: 420
          items:
          - key: value
            path: admin.conf
          secretName: {{ .ClusterName }}-kubeconfig
  backoffLimit: 10
