# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

on:
  workflow_call:
    inputs:
      provider:
        description: Infrastructure provider to run e2e tests with
        type: string
        required: true
      skip:
        description: e2e tests to skip
        type: string
      focus:
        description: e2e tests to focus
        type: string

jobs:
  e2e-test:
    runs-on: "self-hosted-ncn-dind"
    permissions:
      contents: read
      checks: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: cachix/install-nix-action@V27
        if: inputs.provider == 'Nutanix'
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Devbox
        uses: jetify-com/devbox-install-action@v0.11.0
        with:
          enable-cache: "true"
          skip-nix-installation: ${{ inputs.provider == 'Nutanix' }}

      - name: Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set IP range based on provider
        run: |
          if [[ "${{ inputs.provider }}" == "Nutanix" ]]; then
            CONTROL_PLANE_ENDPOINT_RANGE_START="${{ secrets.NUTANIX_CONTROL_PLANE_ENDPOINT_RANGE_START }}"
            CONTROL_PLANE_ENDPOINT_RANGE_END="${{ secrets.NUTANIX_CONTROL_PLANE_ENDPOINT_RANGE_END }}"
          fi
          echo "CONTROL_PLANE_ENDPOINT_RANGE_START=$CONTROL_PLANE_ENDPOINT_RANGE_START" >> "$GITHUB_ENV"
          echo "CONTROL_PLANE_ENDPOINT_RANGE_END=$CONTROL_PLANE_ENDPOINT_RANGE_END" >> "$GITHUB_ENV"

      - name: Get Control Plane endpoint IP
        id: get-control-plane-endpoint-ip
        run: |
          control_plane_endpoint_ip=$(fping -g -u "$CONTROL_PLANE_ENDPOINT_RANGE_START" "$CONTROL_PLANE_ENDPOINT_RANGE_END" 2>/dev/null | shuf --head-count=1)
          echo "control_plane_endpoint_ip=$control_plane_endpoint_ip" >> "$GITHUB_OUTPUT"

      - name: Run e2e tests
        run: devbox run -- make e2e-test E2E_LABEL='provider:${{ inputs.provider }}' E2E_SKIP='${{ inputs.skip }}' E2E_FOCUS='${{ inputs.focus }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          NUTANIX_ENDPOINT: ${{ secrets.NUTANIX_ENDPOINT }}
          NUTANIX_USER: ${{ secrets.NUTANIX_USER }}
          NUTANIX_PASSWORD: ${{ secrets.NUTANIX_PASSWORD }}
          NUTANIX_PORT: ${{ vars.NUTANIX_PORT }}
          NUTANIX_INSECURE: ${{ vars.NUTANIX_INSECURE }}
          NUTANIX_PRISM_ELEMENT_CLUSTER_NAME: ${{ vars.NUTANIX_PRISM_ELEMENT_CLUSTER_NAME }}
          NUTANIX_SUBNET_NAME: ${{ vars.NUTANIX_SUBNET_NAME }}
          NUTANIX_MACHINE_TEMPLATE_IMAGE_NAME: ${{ vars.NUTANIX_MACHINE_TEMPLATE_IMAGE_NAME }}
          NUTANIX_STORAGE_CONTAINER_NAME: ${{ vars.NUTANIX_STORAGE_CONTAINER_NAME }}
          CONTROL_PLANE_ENDPOINT_IP: ${{ steps.get-control-plane-endpoint-ip.outputs.control_plane_endpoint_ip }}

      - if: success() || failure() # always run even if the previous step fails
        name: Publish e2e test report
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'junit-e2e.xml'
          check_name: 'e2e test report'
          detailed_summary: true
          require_passed_tests: true
