# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

on:
  workflow_call:
    inputs:
      provider:
        description: Infrastructure provider to run e2e tests with
        type: string
        required: true
      skip:
        description: e2e tests to skip
        type: string
      focus:
        description: e2e tests to focus
        type: string
      runs-on:
        description: The runner to run the e2e tests on
        type: string
        required: true
      kubernetes-version:
        description: The version of Kubernetes to test with
        type: string
        required: true
      base-os:
        description: The OS image to use for the machine template
        type: string
        required: false

jobs:
  e2e-test:
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      checks: write
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.14.0
        with:
          enable-cache: ${{ inputs.runs-on != 'self-hosted-ncn-dind' }}

      - name: Export go version and mod cache path
        id: export-go-version-and-mod-cache-path
        run: |
          echo go-version="$(devbox run -- go version | cut -d ' ' -f 3)" >>"${GITHUB_OUTPUT}"
          echo mod-cache-path="$(devbox run -- go env GOMODCACHE)" >>"${GITHUB_OUTPUT}"

      - name: Go cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.export-go-version-and-mod-cache-path.outputs.mod-cache-path }}
          key: ${{ runner.os }}-${{ steps.export-go-version-and-mod-cache-path.outputs.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.export-go-version-and-mod-cache-path.outputs.go-version }}-

      # The default disk size of Github hosted runners is ~14GB, this is not enough to run the e2e tests.
      # Cleanup the disk, see upstream discussion https://github.com/actions/runner-images/issues/2840.
      - name: Cleanup Disk Space
        if: inputs.runs-on != 'self-hosted-ncn-dind'
        run: |
          echo "Before removing files:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          echo "After removing files:"
          df -h

      - name: Run e2e tests
        run: devbox run -- make e2e-test E2E_LABEL='provider:${{ inputs.provider }}' E2E_SKIP='${{ inputs.skip }}' E2E_FOCUS='${{ inputs.focus }}' E2E_VERBOSE=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          NUTANIX_ENDPOINT: ${{ secrets.NUTANIX_ENDPOINT }}
          NUTANIX_USER: ${{ secrets.NUTANIX_USER }}
          NUTANIX_PASSWORD: ${{ secrets.NUTANIX_PASSWORD }}
          NUTANIX_PORT: ${{ vars.NUTANIX_PORT }}
          NUTANIX_INSECURE: false
          NUTANIX_PRISM_ELEMENT_CLUSTER_NAME: ${{ vars.NUTANIX_PRISM_ELEMENT_CLUSTER_NAME }}
          NUTANIX_SUBNET_NAME: ${{ vars.NUTANIX_SUBNET_NAME }}
          NUTANIX_STORAGE_CONTAINER_NAME: ${{ vars.NUTANIX_STORAGE_CONTAINER_NAME }}
          NUTANIX_MACHINE_TEMPLATE_BASE_OS: ${{ inputs.base-os }}
          KUBERNETES_VERSION_NUTANIX: ${{ inputs.kubernetes-version }}
          KINDEST_IMAGE_TAG: ${{ inputs.kubernetes-version }}
          E2E_KUBERNETES_VERSION: ${{ inputs.kubernetes-version }}

      - name: Collect bootstrap cluster pod logs on failure
        if: failure()
        run: |
          echo "Collecting pod logs from bootstrap cluster..."
          mkdir -p bootstrap-pod-logs

          # Get kubeconfig path for bootstrap cluster
          BOOTSTRAP_KUBECONFIG=$(find _artifacts/clusters/bootstrap -name kubeconfig 2>/dev/null | head -n 1)

          if [[ -n "$BOOTSTRAP_KUBECONFIG" ]]; then
            export KUBECONFIG="$BOOTSTRAP_KUBECONFIG"

            # Get all pods overview
            kubectl get pods -A -o wide > bootstrap-pod-logs/all-pods.txt 2>&1 || echo "Failed to get pods" > bootstrap-pod-logs/all-pods.txt

            # Get CAREN controller logs (main focus)
            echo "Collecting CAREN controller logs..."
            kubectl logs -n caren-system -l app.kubernetes.io/name=cluster-api-runtime-extensions-nutanix --all-containers=true --tail=1000 > bootstrap-pod-logs/caren-controller.log 2>&1 || echo "Failed to get CAREN logs" > bootstrap-pod-logs/caren-controller.log

            # Get all CAPI provider logs
            echo "Collecting CAPI provider logs..."
            for ns in capi-system capi-kubeadm-bootstrap-system capi-kubeadm-control-plane-system capd-system capn-system capa-system caaph-system; do
              if kubectl get namespace "$ns" >/dev/null 2>&1; then
                mkdir -p "bootstrap-pod-logs/$ns"
                kubectl get pods -n "$ns" -o wide > "bootstrap-pod-logs/$ns/pods.txt" 2>&1 || true
                for pod in $(kubectl get pods -n "$ns" -o name 2>/dev/null); do
                  pod_name=$(basename "$pod")
                  kubectl logs -n "$ns" "$pod_name" --all-containers=true --tail=500 > "bootstrap-pod-logs/$ns/${pod_name}.log" 2>&1 || true
                done
              fi
            done

            # Get HelmReleaseProxy and HelmChartProxy resources
            echo "Collecting Helm addon resources..."
            kubectl get helmreleaseproxies -A -o yaml > bootstrap-pod-logs/helmreleaseproxies.yaml 2>&1 || true
            kubectl get helmchartproxies -A -o yaml > bootstrap-pod-logs/helmchartproxies.yaml 2>&1 || true
          else
            echo "Bootstrap kubeconfig not found" > bootstrap-pod-logs/error.txt
          fi

      - name: Upload bootstrap pod logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bootstrap-pod-logs-${{ inputs.provider }}-${{ inputs.kubernetes-version }}
          path: bootstrap-pod-logs/
          if-no-files-found: warn

      - if: success() || failure() # always run even if the previous step fails
        name: Publish e2e test report
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: 'junit-e2e.xml'
          check_name: 'e2e test report'
          detailed_summary: true
          require_passed_tests: true
