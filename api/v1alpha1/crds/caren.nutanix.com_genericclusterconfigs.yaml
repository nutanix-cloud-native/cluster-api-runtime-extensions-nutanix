# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  name: genericclusterconfigs.caren.nutanix.com
spec:
  group: caren.nutanix.com
  names:
    kind: GenericClusterConfig
    listKind: GenericClusterConfigList
    plural: genericclusterconfigs
    singular: genericclusterconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GenericClusterConfig is the Schema for the genericclusterconfigs
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          extraAPIServerCertSANs:
            description: Extra Subject Alternative Names for the API Server signing
              cert.
            items:
              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
              type: string
            type: array
            uniqueItems: true
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GenericClusterConfigSpec defines the desired state of GenericClusterConfig.
            properties:
              dns:
                description: DNS defines the DNS configuration for the cluster.
                properties:
                  coreDNS:
                    description: CoreDNS defines the CoreDNS configuration for the
                      cluster.
                    properties:
                      image:
                        description: |-
                          Image required for overriding Kubernetes DNS image details.
                          If the image version is not specified,
                          the default version based on the cluster's Kubernetes version will be used.
                        properties:
                          repository:
                            description: Repository is used to override the image
                              repository to pull from.
                            pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                            type: string
                          tag:
                            description: Tag is used to override the default image
                              tag.
                            pattern: ^[\w][\w.-]{0,127}$
                            type: string
                        type: object
                    type: object
                type: object
              encryptionAtRest:
                description: |-
                  EncryptionAtRest defines the configuration to enable encryption at REST
                  This configuration is used by API server to encrypt data before storing it in ETCD.
                  Currently the encryption only enabled for secrets and configmaps.
                properties:
                  providers:
                    default:
                    - aescbc: {}
                    description: Encryption providers
                    items:
                      properties:
                        aescbc:
                          type: object
                        secretbox:
                          type: object
                      type: object
                    maxItems: 1
                    type: array
                type: object
              etcd:
                properties:
                  image:
                    description: Image required for overriding etcd image details.
                    properties:
                      repository:
                        description: Repository is used to override the image repository
                          to pull from.
                        pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                        type: string
                      tag:
                        description: Tag is used to override the default image tag.
                        pattern: ^[\w][\w.-]{0,127}$
                        type: string
                    type: object
                type: object
              globalImageRegistryMirror:
                description: GlobalImageRegistryMirror sets default mirror configuration
                  for all the image registries.
                properties:
                  credentials:
                    description: Credentials and CA certificate for the image registry
                      mirror
                    properties:
                      secretRef:
                        description: |-
                          A reference to the Secret containing the registry credentials and optional CA certificate
                          using the keys `username`, `password` and `ca.crt`.
                          This credentials Secret is not required for some registries, e.g. ECR.
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  url:
                    description: Registry mirror URL.
                    format: uri
                    pattern: ^https?://
                    type: string
                required:
                - url
                type: object
              imageRegistries:
                items:
                  properties:
                    credentials:
                      description: Credentials and CA certificate for the image registry
                      properties:
                        secretRef:
                          description: |-
                            A reference to the Secret containing the registry credentials and optional CA certificate
                            using the keys `username`, `password` and `ca.crt`.
                            This credentials Secret is not required for some registries, e.g. ECR.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    url:
                      description: Registry URL.
                      format: uri
                      pattern: ^https?://
                      type: string
                  required:
                  - url
                  type: object
                type: array
              kubernetesImageRepository:
                description: Sets the Kubernetes image repository used for the KubeadmControlPlane.
                pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                type: string
              proxy:
                description: HTTPProxy required for providing proxy configuration.
                properties:
                  additionalNo:
                    description: |-
                      AdditionalNo Proxy list that will be added to the automatically calculated
                      values that will apply no_proxy configuration for cluster internal network.
                      Default values: localhost,127.0.0.1,<POD_NETWORK>,<SERVICE_NETWORK>,kubernetes
                        ,kubernetes.default,.svc,.svc.<SERVICE_DOMAIN>
                    items:
                      type: string
                    type: array
                  http:
                    description: HTTP proxy value.
                    type: string
                  https:
                    description: HTTPS proxy value.
                    type: string
                type: object
              users:
                items:
                  description: User defines the input for a generated user in cloud-init.
                  properties:
                    hashedPassword:
                      description: |-
                        HashedPassword is a hashed password for the user, formatted as described
                        by the crypt(5) man page. See your distribution's documentation for
                        instructions to create a hashed password.
                        An empty string is not marshalled, because it is not a valid value.
                      type: string
                    name:
                      description: Name specifies the user name.
                      type: string
                    sshAuthorizedKeys:
                      description: |-
                        SSHAuthorizedKeys is a list of public SSH keys to write to the
                        machine. Use the corresponding private SSH keys to authenticate. See SSH
                        documentation for instructions to create a key pair.
                      items:
                        type: string
                      type: array
                    sudo:
                      description: |-
                        Sudo is a sudo user specification, formatted as described in the sudo
                        documentation.
                        An empty string is not marshalled, because it is not a valid value.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
