# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: vsphereclusterconfigs.caren.nutanix.com
spec:
  group: caren.nutanix.com
  names:
    kind: VSphereClusterConfig
    listKind: VSphereClusterConfigList
    plural: vsphereclusterconfigs
    singular: vsphereclusterconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VSphereClusterConfig is the Schema for the VSphereclusterconfigs
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereClusterConfigSpec defines the desired state of VSphereClusterConfig.
            properties:
              addons:
                properties:
                  ccm:
                    description: CCM tells us to enable or disable the cloud provider
                      interface.
                    properties:
                      credentials:
                        description: A reference to the Secret for credential information
                          for the target Prism Central instance
                        properties:
                          secretRef:
                            description: A reference to the Secret containing the
                              credentials used by the CCM provider.
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - secretRef
                        type: object
                      strategy:
                        default: HelmAddon
                        description: Addon strategy used to deploy the CCM to the
                          workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                    type: object
                  clusterAutoscaler:
                    description: ClusterAutoscaler tells us to enable or disable the
                      cluster-autoscaler addon.
                    properties:
                      strategy:
                        default: HelmAddon
                        description: |-
                          Addon strategy used to deploy cluster-autoscaler to the management cluster
                          targeting the workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                    type: object
                  cni:
                    description: CNI required for providing CNI configuration.
                    properties:
                      provider:
                        description: CNI provider to deploy.
                        enum:
                        - Calico
                        - Cilium
                        type: string
                      strategy:
                        default: HelmAddon
                        description: Addon strategy used to deploy the CNI provider
                          to the workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                      values:
                        description: Values contains the helm values for the CNI when
                          HelmAddon is the strategy.
                        properties:
                          sourceRef:
                            description: |-
                              SourceRef is an object reference to Configmap/Secret inside the same namespace
                              which contains inline YAML representing the values for the Helm chart.
                            properties:
                              kind:
                                description: Kind is the type of resource being referenced,
                                  valid values are ('ConfigMap').
                                enum:
                                - ConfigMap
                                type: string
                              name:
                                description: Name is the name of resource being referenced.
                                minLength: 1
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                        type: object
                    required:
                    - provider
                    type: object
                  nfd:
                    description: NFD tells us to enable or disable the node feature
                      discovery addon.
                    properties:
                      strategy:
                        default: HelmAddon
                        description: Addon strategy used to deploy Node Feature Discovery
                          (NFD) to the workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                    type: object
                  serviceLoadBalancer:
                    properties:
                      configuration:
                        description: Configuration for the chosen ServiceLoadBalancer
                          provider.
                        properties:
                          addressRanges:
                            description: |-
                              AddressRanges is a list of IPv4 address ranges the
                              provider uses to choose an address for a load balancer.
                            items:
                              description: AddressRange defines an IPv4 range.
                              properties:
                                end:
                                  format: ipv4
                                  type: string
                                start:
                                  format: ipv4
                                  type: string
                              required:
                              - end
                              - start
                              type: object
                            minItems: 1
                            type: array
                        required:
                        - addressRanges
                        type: object
                      provider:
                        description: |-
                          The LoadBalancer-type Service provider to deploy. Not required in infrastructures where
                          the CCM acts as the provider.
                        enum:
                        - MetalLB
                        type: string
                    required:
                    - provider
                    type: object
                type: object
              controlPlane:
                properties:
                  autoRenewCertificates:
                    description: |-
                      AutoRenewCertificates specifies the configuration for auto-renewing the
                      certificates of the control plane.
                    properties:
                      daysBeforeExpiry:
                        description: |-
                          DaysBeforeExpiry indicates a rollout needs to be performed if the
                          certificates of the control plane will expire within the specified days.
                        format: int32
                        minimum: 7
                        type: integer
                    required:
                    - daysBeforeExpiry
                    type: object
                  taints:
                    description: Taints specifies the taints the Node API object should
                      be registered with.
                    items:
                      description: |-
                        The node this Taint is attached to has the "effect" on
                        any pod that does not tolerate the Taint.
                      properties:
                        effect:
                          default: NoSchedule
                          description: |-
                            The effect of the taint on pods that do not tolerate the taint.
                            Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                          enum:
                          - NoSchedule
                          - PreferNoSchedule
                          - NoExecute
                          type: string
                        key:
                          description: The taint key to be applied to a node.
                          type: string
                        value:
                          description: The taint value corresponding to the taint
                            key.
                          type: string
                      required:
                      - effect
                      - key
                      type: object
                    type: array
                  vsphere:
                    description: // +kubebuilder:validation:Optional
                    properties:
                      machineDetails:
                        properties:
                          additionalDisksGiB:
                            description: |-
                              AdditionalDisksGiB holds the sizes of additional disks of the virtual machine, in GiB
                              Defaults to the eponymous property value in the template from which the
                              virtual machine is cloned.
                            items:
                              format: int32
                              type: integer
                            type: array
                          cloneMode:
                            description: |-
                              CloneMode specifies the type of clone operation.
                              The LinkedClone mode is only support for templates that have at least
                              one snapshot. If the template has no snapshots, then CloneMode defaults
                              to FullClone.
                              When LinkedClone mode is enabled the DiskGiB field is ignored as it is
                              not possible to expand disks of linked clones.
                              Defaults to LinkedClone, but fails gracefully to FullClone if the source
                              of the clone operation has no snapshots.
                            type: string
                          customVMXKeys:
                            additionalProperties:
                              type: string
                            description: |-
                              CustomVMXKeys is a dictionary of advanced VMX options that can be set on VM
                              Defaults to empty map
                            type: object
                          datacenter:
                            description: |-
                              Datacenter is the name, inventory path, managed object reference or the managed
                              object ID of the datacenter in which the virtual machine is created/located.
                              Defaults to * which selects the default datacenter.
                            type: string
                          datastore:
                            description: |-
                              Datastore is the name, inventory path, managed object reference or the managed
                              object ID of the datastore in which the virtual machine is created/located.
                            type: string
                          diskGiB:
                            description: |-
                              DiskGiB is the size of a virtual machine's disk, in GiB.
                              Defaults to the eponymous property value in the template from which the
                              virtual machine is cloned.
                            format: int32
                            type: integer
                          folder:
                            description: |-
                              Folder is the name, inventory path, managed object reference or the managed
                              object ID of the folder in which the virtual machine is created/located.
                            type: string
                          hardwareVersion:
                            description: |-
                              HardwareVersion is the hardware version of the virtual machine.
                              Defaults to the eponymous property value in the template from which the
                              virtual machine is cloned.
                              Check the compatibility with the ESXi version before setting the value.
                            type: string
                          memoryMiB:
                            description: |-
                              MemoryMiB is the size of a virtual machine's memory, in MiB.
                              Defaults to the eponymous property value in the template from which the
                              virtual machine is cloned.
                            format: int64
                            type: integer
                          network:
                            description: Network is the network configuration for
                              this machine's VM.
                            properties:
                              devices:
                                description: |
                                  Devices is the list of network devices used by the virtual machine.
                                items:
                                  description: |-
                                    NetworkDeviceSpec defines the network configuration for a virtual machine's
                                    network device.
                                  properties:
                                    addressesFromPools:
                                      description: |-
                                        AddressesFromPools is a list of IPAddressPools that should be assigned
                                        to IPAddressClaims. The machine's cloud-init metadata will be populated
                                        with IPAddresses fulfilled by an IPAM provider.
                                      items:
                                        description: |-
                                          TypedLocalObjectReference contains enough information to let you locate the
                                          typed referenced object inside the same namespace.
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                    deviceName:
                                      description: |-
                                        DeviceName may be used to explicitly assign a name to the network device
                                        as it exists in the guest operating system.
                                      type: string
                                    dhcp4:
                                      description: |-
                                        DHCP4 is a flag that indicates whether or not to use DHCP for IPv4
                                        on this device.
                                        If true then IPAddrs should not contain any IPv4 addresses.
                                      type: boolean
                                    dhcp4Overrides:
                                      description: |-
                                        DHCP4Overrides allows for the control over several DHCP behaviors.
                                        Overrides will only be applied when the corresponding DHCP flag is set.
                                        Only configured values will be sent, omitted values will default to
                                        distribution defaults.
                                        Dependent on support in the network stack for your distribution.
                                        For more information see the netplan reference (https://netplan.io/reference#dhcp-overrides)
                                      properties:
                                        hostname:
                                          description: |-
                                            Hostname is the name which will be sent to the DHCP server instead of
                                            the machine's hostname.
                                          type: string
                                        routeMetric:
                                          description: |-
                                            RouteMetric is used to prioritize routes for devices. A lower metric for
                                            an interface will have a higher priority.
                                          type: integer
                                        sendHostname:
                                          description: |-
                                            SendHostname when `true`, the hostname of the machine will be sent to the
                                            DHCP server.
                                          type: boolean
                                        useDNS:
                                          description: |-
                                            UseDNS when `true`, the DNS servers in the DHCP server will be used and
                                            take precedence.
                                          type: boolean
                                        useDomains:
                                          description: |-
                                            UseDomains can take the values `true`, `false`, or `route`. When `true`,
                                            the domain name from the DHCP server will be used as the DNS search
                                            domain for this device. When `route`, the domain name from the DHCP
                                            response will be used for routing DNS only, not for searching.
                                          type: string
                                        useHostname:
                                          description: |-
                                            UseHostname when `true`, the hostname from the DHCP server will be set
                                            as the transient hostname of the machine.
                                          type: boolean
                                        useMTU:
                                          description: |-
                                            UseMTU when `true`, the MTU from the DHCP server will be set as the
                                            MTU of the device.
                                          type: boolean
                                        useNTP:
                                          description: |-
                                            UseNTP when `true`, the NTP servers from the DHCP server will be used
                                            by systemd-timesyncd and take precedence.
                                          type: boolean
                                        useRoutes:
                                          description: |-
                                            UseRoutes when `true`, the routes from the DHCP server will be installed
                                            in the routing table.
                                          type: string
                                      type: object
                                    dhcp6:
                                      description: |-
                                        DHCP6 is a flag that indicates whether or not to use DHCP for IPv6
                                        on this device.
                                        If true then IPAddrs should not contain any IPv6 addresses.
                                      type: boolean
                                    dhcp6Overrides:
                                      description: |-
                                        DHCP6Overrides allows for the control over several DHCP behaviors.
                                        Overrides will only be applied when the corresponding DHCP flag is set.
                                        Only configured values will be sent, omitted values will default to
                                        distribution defaults.
                                        Dependent on support in the network stack for your distribution.
                                        For more information see the netplan reference (https://netplan.io/reference#dhcp-overrides)
                                      properties:
                                        hostname:
                                          description: |-
                                            Hostname is the name which will be sent to the DHCP server instead of
                                            the machine's hostname.
                                          type: string
                                        routeMetric:
                                          description: |-
                                            RouteMetric is used to prioritize routes for devices. A lower metric for
                                            an interface will have a higher priority.
                                          type: integer
                                        sendHostname:
                                          description: |-
                                            SendHostname when `true`, the hostname of the machine will be sent to the
                                            DHCP server.
                                          type: boolean
                                        useDNS:
                                          description: |-
                                            UseDNS when `true`, the DNS servers in the DHCP server will be used and
                                            take precedence.
                                          type: boolean
                                        useDomains:
                                          description: |-
                                            UseDomains can take the values `true`, `false`, or `route`. When `true`,
                                            the domain name from the DHCP server will be used as the DNS search
                                            domain for this device. When `route`, the domain name from the DHCP
                                            response will be used for routing DNS only, not for searching.
                                          type: string
                                        useHostname:
                                          description: |-
                                            UseHostname when `true`, the hostname from the DHCP server will be set
                                            as the transient hostname of the machine.
                                          type: boolean
                                        useMTU:
                                          description: |-
                                            UseMTU when `true`, the MTU from the DHCP server will be set as the
                                            MTU of the device.
                                          type: boolean
                                        useNTP:
                                          description: |-
                                            UseNTP when `true`, the NTP servers from the DHCP server will be used
                                            by systemd-timesyncd and take precedence.
                                          type: boolean
                                        useRoutes:
                                          description: |-
                                            UseRoutes when `true`, the routes from the DHCP server will be installed
                                            in the routing table.
                                          type: string
                                      type: object
                                    gateway4:
                                      description: |-
                                        Gateway4 is the IPv4 gateway used by this device.
                                        Required when DHCP4 is false.
                                      type: string
                                    gateway6:
                                      description: Gateway4 is the IPv4 gateway used
                                        by this device.
                                      type: string
                                    ipAddrs:
                                      description: |-
                                        IPAddrs is a list of one or more IPv4 and/or IPv6 addresses to assign
                                        to this device. IP addresses must also specify the segment length in
                                        CIDR notation.
                                        Required when DHCP4, DHCP6 and SkipIPAllocation are false.
                                      items:
                                        type: string
                                      type: array
                                    macAddr:
                                      description: |-
                                        MACAddr is the MAC address used by this device.
                                        It is generally a good idea to omit this field and allow a MAC address
                                        to be generated.
                                        Please note that this value must use the VMware OUI to work with the
                                        in-tree vSphere cloud provider.
                                      type: string
                                    mtu:
                                      description: MTU is the device’s Maximum Transmission
                                        Unit size in bytes.
                                      format: int64
                                      type: integer
                                    nameservers:
                                      description: |-
                                        Nameservers is a list of IPv4 and/or IPv6 addresses used as DNS
                                        nameservers.
                                        Please note that Linux allows only three nameservers (https://linux.die.net/man/5/resolv.conf).
                                      items:
                                        type: string
                                      type: array
                                    networkName:
                                      description: |-
                                        NetworkName is the name, managed object reference or the managed
                                        object ID of the vSphere network to which the device will be connected.
                                      type: string
                                    routes:
                                      description: Routes is a list of optional, static
                                        routes applied to the device.
                                      items:
                                        description: NetworkRouteSpec defines a static
                                          network route.
                                        properties:
                                          metric:
                                            description: Metric is the weight/priority
                                              of the route.
                                            format: int32
                                            type: integer
                                          to:
                                            description: To is an IPv4 or IPv6 address.
                                            type: string
                                          via:
                                            description: Via is an IPv4 or IPv6 address.
                                            type: string
                                        required:
                                        - metric
                                        - to
                                        - via
                                        type: object
                                      type: array
                                    searchDomains:
                                      description: |-
                                        SearchDomains is a list of search domains used when resolving IP
                                        addresses with DNS.
                                      items:
                                        type: string
                                      type: array
                                    skipIPAllocation:
                                      description: |-
                                        SkipIPAllocation allows the device to not have IP address or DHCP configured.
                                        This is suitable for devices for which IP allocation is handled externally, eg. using Multus CNI.
                                        If true, CAPV will not verify IP address allocation.
                                      type: boolean
                                  required:
                                  - networkName
                                  type: object
                                type: array
                              preferredAPIServerCidr:
                                description: |-
                                  PreferredAPIServeCIDR is the preferred CIDR for the Kubernetes API
                                  server endpoint on this machine

                                  Deprecated: This field is going to be removed in a future release.
                                type: string
                              routes:
                                description: |-
                                  Routes is a list of optional, static routes applied to the virtual
                                  machine.
                                items:
                                  description: NetworkRouteSpec defines a static network
                                    route.
                                  properties:
                                    metric:
                                      description: Metric is the weight/priority of
                                        the route.
                                      format: int32
                                      type: integer
                                    to:
                                      description: To is an IPv4 or IPv6 address.
                                      type: string
                                    via:
                                      description: Via is an IPv4 or IPv6 address.
                                      type: string
                                  required:
                                  - metric
                                  - to
                                  - via
                                  type: object
                                type: array
                            required:
                            - devices
                            type: object
                          numCPUs:
                            description: |-
                              NumCPUs is the number of virtual processors in a virtual machine.
                              Defaults to the eponymous property value in the template from which the
                              virtual machine is cloned.
                            format: int32
                            type: integer
                          numCoresPerSocket:
                            description: |-
                              NumCPUs is the number of cores among which to distribute CPUs in this
                              virtual machine.
                              Defaults to the eponymous property value in the template from which the
                              virtual machine is cloned.
                            format: int32
                            type: integer
                          os:
                            description: |-
                              OS is the Operating System of the virtual machine
                              Defaults to Linux
                            type: string
                          pciDevices:
                            description: PciDevices is the list of pci devices used
                              by the virtual machine.
                            items:
                              description: PCIDeviceSpec defines virtual machine's
                                PCI configuration.
                              properties:
                                customLabel:
                                  description: |-
                                    CustomLabel is the hardware label of a virtual machine's PCI device.
                                    Defaults to the eponymous property value in the template from which the
                                    virtual machine is cloned.
                                  type: string
                                deviceId:
                                  description: |-
                                    DeviceID is the device ID of a virtual machine's PCI, in integer.
                                    Defaults to the eponymous property value in the template from which the
                                    virtual machine is cloned.
                                    Mutually exclusive with VGPUProfile as VGPUProfile and DeviceID + VendorID
                                    are two independent ways to define PCI devices.
                                  format: int32
                                  type: integer
                                vGPUProfile:
                                  description: |-
                                    VGPUProfile is the profile name of a virtual machine's vGPU, in string.
                                    Defaults to the eponymous property value in the template from which the
                                    virtual machine is cloned.
                                    Mutually exclusive with DeviceID and VendorID as VGPUProfile and DeviceID + VendorID
                                    are two independent ways to define PCI devices.
                                  type: string
                                vendorId:
                                  description: |-
                                    VendorId is the vendor ID of a virtual machine's PCI, in integer.
                                    Defaults to the eponymous property value in the template from which the
                                    virtual machine is cloned.
                                    Mutually exclusive with VGPUProfile as VGPUProfile and DeviceID + VendorID
                                    are two independent ways to define PCI devices.
                                  format: int32
                                  type: integer
                              type: object
                            type: array
                          resourcePool:
                            description: |-
                              ResourcePool is the name, inventory path, managed object reference or the managed
                              object ID in which the virtual machine is created/located.
                            type: string
                          server:
                            description: |-
                              Server is the IP address or FQDN of the vSphere server on which
                              the virtual machine is created/located.
                            type: string
                          snapshot:
                            description: |-
                              Snapshot is the name of the snapshot from which to create a linked clone.
                              This field is ignored if LinkedClone is not enabled.
                              Defaults to the source's current snapshot.
                            type: string
                          storagePolicyName:
                            description: |-
                              StoragePolicyName of the storage policy to use with this
                              Virtual Machine
                            type: string
                          tagIDs:
                            description: |-
                              TagIDs is an optional set of tags to add to an instance. Specified tagIDs
                              must use URN-notation instead of display names.
                            items:
                              type: string
                            type: array
                          template:
                            description: |-
                              Template is the name, inventory path, managed object reference or the managed
                              object ID of the template used to clone the virtual machine.
                            minLength: 1
                            type: string
                          thumbprint:
                            description: |-
                              Thumbprint is the colon-separated SHA-1 checksum of the given vCenter server's host certificate
                              When this is set to empty, this VirtualMachine would be created
                              without TLS certificate validation of the communication between Cluster API Provider vSphere
                              and the VMware vCenter server.
                            type: string
                        required:
                        - network
                        - template
                        type: object
                    type: object
                type: object
              dns:
                description: DNS defines the DNS configuration for the cluster.
                properties:
                  coreDNS:
                    description: CoreDNS defines the CoreDNS configuration for the
                      cluster.
                    properties:
                      image:
                        description: |-
                          Image required for overriding Kubernetes DNS image details.
                          If the image version is not specified,
                          the default version based on the cluster's Kubernetes version will be used.
                        properties:
                          repository:
                            description: Repository is used to override the image
                              repository to pull from.
                            pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                            type: string
                          tag:
                            description: Tag is used to override the default image
                              tag.
                            pattern: ^[\w][\w.-]{0,127}$
                            type: string
                        type: object
                    type: object
                type: object
              encryptionAtRest:
                description: |-
                  EncryptionAtRest defines the configuration to enable encryption at REST
                  This configuration is used by API server to encrypt data before storing it in ETCD.
                  Currently the encryption only enabled for secrets and configmaps.
                properties:
                  providers:
                    default:
                    - aescbc: {}
                    description: Encryption providers
                    items:
                      properties:
                        aescbc:
                          type: object
                        secretbox:
                          type: object
                      type: object
                    maxItems: 1
                    type: array
                type: object
              etcd:
                properties:
                  image:
                    description: Image required for overriding etcd image details.
                    properties:
                      repository:
                        description: Repository is used to override the image repository
                          to pull from.
                        pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                        type: string
                      tag:
                        description: Tag is used to override the default image tag.
                        pattern: ^[\w][\w.-]{0,127}$
                        type: string
                    type: object
                type: object
              extraAPIServerCertSANs:
                description: |-
                  Subject Alternative Names for the API Server signing cert.
                  For the Nutanix provider, the following default SANs will always be added:
                  - localhost
                  - 127.0.0.1
                  - 0.0.0.0
                items:
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                type: array
                uniqueItems: true
              globalImageRegistryMirror:
                description: GlobalImageRegistryMirror sets default mirror configuration
                  for all the image registries.
                properties:
                  credentials:
                    description: Credentials and CA certificate for the image registry
                      mirror
                    properties:
                      secretRef:
                        description: |-
                          A reference to the Secret containing the registry credentials and optional CA certificate
                          using the keys `username`, `password` and `ca.crt`.
                          This credentials Secret is not required for some registries, e.g. ECR.
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  url:
                    description: Registry mirror URL.
                    format: uri
                    pattern: ^https?://
                    type: string
                required:
                - url
                type: object
              imageRegistries:
                items:
                  properties:
                    credentials:
                      description: Credentials and CA certificate for the image registry
                      properties:
                        secretRef:
                          description: |-
                            A reference to the Secret containing the registry credentials and optional CA certificate
                            using the keys `username`, `password` and `ca.crt`.
                            This credentials Secret is not required for some registries, e.g. ECR.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    url:
                      description: Registry URL.
                      format: uri
                      pattern: ^https?://
                      type: string
                  required:
                  - url
                  type: object
                type: array
              kubernetesImageRepository:
                description: Sets the Kubernetes image repository used for the KubeadmControlPlane.
                pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                type: string
              proxy:
                description: HTTPProxy required for providing proxy configuration.
                properties:
                  additionalNo:
                    description: |-
                      AdditionalNo Proxy list that will be added to the automatically calculated
                      values that will apply no_proxy configuration for cluster internal network.
                      Default values: localhost,127.0.0.1,<POD_NETWORK>,<SERVICE_NETWORK>,kubernetes
                        ,kubernetes.default,.svc,.svc.<SERVICE_DOMAIN>
                    items:
                      type: string
                    type: array
                  http:
                    description: HTTP proxy value.
                    type: string
                  https:
                    description: HTTPS proxy value.
                    type: string
                type: object
              users:
                items:
                  description: User defines the input for a generated user in cloud-init.
                  properties:
                    hashedPassword:
                      description: |-
                        HashedPassword is a hashed password for the user, formatted as described
                        by the crypt(5) man page. See your distribution's documentation for
                        instructions to create a hashed password.
                        An empty string is not marshalled, because it is not a valid value.
                      type: string
                    name:
                      description: Name specifies the user name.
                      type: string
                    sshAuthorizedKeys:
                      description: |-
                        SSHAuthorizedKeys is a list of public SSH keys to write to the
                        machine. Use the corresponding private SSH keys to authenticate. See SSH
                        documentation for instructions to create a key pair.
                      items:
                        type: string
                      type: array
                    sudo:
                      description: |-
                        Sudo is a sudo user specification, formatted as described in the sudo
                        documentation.
                        An empty string is not marshalled, because it is not a valid value.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              vsphere:
                description: VSphereSpec defines the desired state of VSphereCluster.
                properties:
                  controlPlaneEndpoint:
                    description: |-
                      ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                      host can be either DNS name or ip address
                    properties:
                      host:
                        description: The hostname on which the API server is serving.
                        minLength: 1
                        type: string
                      port:
                        description: The port on which the API server is serving.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      virtualIP:
                        description: Configuration for the virtual IP provider.
                        properties:
                          configuration:
                            description: Configuration for the chosen control-plane
                              virtual IP provider.
                            properties:
                              address:
                                description: |-
                                  The virtual IP on which the API server is serving.
                                  If left empty, the value from controlPlaneEndpoint.host will be used.
                                format: ipv4
                                type: string
                              port:
                                description: |-
                                  The port on which the API server is serving.
                                  If left empty, the value from controlPlaneEndpoint.port will be used.
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                            type: object
                          provider:
                            default: KubeVIP
                            description: Virtual IP provider to deploy.
                            enum:
                            - KubeVIP
                            type: string
                        type: object
                    required:
                    - host
                    - port
                    type: object
                required:
                - controlPlaneEndpoint
                type: object
            type: object
        type: object
    served: true
    storage: true
