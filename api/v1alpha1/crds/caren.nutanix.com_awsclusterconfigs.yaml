# Copyright 2024 Nutanix. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  name: awsclusterconfigs.caren.nutanix.com
spec:
  group: caren.nutanix.com
  names:
    kind: AWSClusterConfig
    listKind: AWSClusterConfigList
    plural: awsclusterconfigs
    singular: awsclusterconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AWSClusterConfig is the Schema for the awsclusterconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AWSClusterConfigSpec defines the desired state of ClusterConfig.
            properties:
              addons:
                properties:
                  ccm:
                    description: CCM tells us to enable or disable the cloud provider
                      interface.
                    properties:
                      credentials:
                        description: A reference to the Secret for credential information
                          for the target Prism Central instance
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  clusterAutoscaler:
                    description: ClusterAutoscaler tells us to enable or disable the
                      cluster-autoscaler addon.
                    properties:
                      strategy:
                        description: |-
                          Addon strategy used to deploy cluster-autoscaler to the management cluster
                          targeting the workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                    required:
                    - strategy
                    type: object
                  cni:
                    description: CNI required for providing CNI configuration.
                    properties:
                      provider:
                        description: CNI provider to deploy.
                        enum:
                        - Calico
                        - Cilium
                        type: string
                      strategy:
                        description: Addon strategy used to deploy the CNI provider
                          to the workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                    required:
                    - provider
                    - strategy
                    type: object
                  csi:
                    properties:
                      defaultStorage:
                        properties:
                          providerName:
                            description: Name of the CSI Provider for the default
                              storage class.
                            enum:
                            - aws-ebs
                            - nutanix
                            type: string
                          storageClassConfigName:
                            description: Name of storage class config in any of the
                              provider objects.
                            minLength: 1
                            type: string
                        required:
                        - providerName
                        - storageClassConfigName
                        type: object
                      providers:
                        items:
                          properties:
                            credentials:
                              description: The reference to any secret used by the
                                CSI Provider.
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              type: object
                            name:
                              description: Name of the CSI Provider.
                              enum:
                              - aws-ebs
                              - nutanix
                              type: string
                            storageClassConfig:
                              description: StorageClassConfig is a list of storage
                                class configurations for this CSI provider.
                              items:
                                properties:
                                  allowExpansion:
                                    default: false
                                    description: If the storage class should allow
                                      volume expanding
                                    type: boolean
                                  name:
                                    description: Name of storage class config.
                                    minLength: 1
                                    type: string
                                  parameters:
                                    additionalProperties:
                                      type: string
                                    description: Parameters passed into the storage
                                      class object.
                                    type: object
                                  reclaimPolicy:
                                    default: Delete
                                    description: PersistentVolumeReclaimPolicy describes
                                      a policy for end-of-life maintenance of persistent
                                      volumes.
                                    enum:
                                    - Delete
                                    - Retain
                                    - Recycle
                                    type: string
                                  volumeBindingMode:
                                    default: WaitForFirstConsumer
                                    description: VolumeBindingMode indicates how PersistentVolumeClaims
                                      should be bound.
                                    enum:
                                    - Immediate
                                    - WaitForFirstConsumer
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            strategy:
                              description: Addon strategy used to deploy the CSI provider
                                to the workload cluster.
                              enum:
                              - ClusterResourceSet
                              - HelmAddon
                              type: string
                          required:
                          - name
                          - strategy
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - defaultStorage
                    - providers
                    type: object
                  nfd:
                    description: NFD tells us to enable or disable the node feature
                      discovery addon.
                    properties:
                      strategy:
                        description: Addon strategy used to deploy Node Feature Discovery
                          (NFD) to the workload cluster.
                        enum:
                        - ClusterResourceSet
                        - HelmAddon
                        type: string
                    required:
                    - strategy
                    type: object
                  serviceLoadBalancer:
                    properties:
                      provider:
                        description: |-
                          The LoadBalancer-type Service provider to deploy. Not required in infrastructures where
                          the CCM acts as the provider.
                        enum:
                        - MetalLB
                        type: string
                    required:
                    - provider
                    type: object
                type: object
              aws:
                description: AWS cluster configuration.
                properties:
                  controlPlaneLoadBalancer:
                    description: AWSLoadBalancerSpec configures an AWS control-plane
                      LoadBalancer.
                    properties:
                      scheme:
                        default: internet-facing
                        description: Scheme sets the scheme of the load balancer.
                        enum:
                        - internet-facing
                        - internal
                        type: string
                    type: object
                  network:
                    description: AWS network configuration.
                    properties:
                      subnets:
                        description: AWS Subnet configuration.
                        items:
                          description: SubnetSpec configures an AWS Subnet.
                          properties:
                            id:
                              description: Existing Subnet ID to use for the cluster.
                              minLength: 1
                              type: string
                          required:
                          - id
                          type: object
                        type: array
                      vpc:
                        properties:
                          id:
                            description: Existing VPC ID to use for the cluster.
                            minLength: 1
                            type: string
                        required:
                        - id
                        type: object
                    type: object
                  region:
                    description: AWS region to create cluster in.
                    type: string
                type: object
              controlPlane:
                description: |-
                  AWSControlPlaneConfigSpec defines the desired state of AWSNodeConfig.
                  Place any configuration that can be applied to individual Nodes here.
                  Otherwise, it should go into the ClusterConfigSpec.
                properties:
                  aws:
                    properties:
                      additionalSecurityGroups:
                        items:
                          properties:
                            id:
                              description: ID is the id of the security group
                              type: string
                          type: object
                        type: array
                      ami:
                        description: |-
                          AMI or AMI Lookup arguments for machine image of a AWS machine.
                          If both AMI ID and AMI lookup arguments are provided then AMI ID takes precedence
                        properties:
                          id:
                            description: AMI ID is the reference to the AMI from which
                              to create the machine instance.
                            type: string
                          lookup:
                            description: Lookup is the lookup arguments for the AMI.
                            properties:
                              baseOS:
                                description: The name of the base os for image lookup
                                type: string
                              format:
                                description: |-
                                  AMI naming format. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the
                                  base OS and kubernetes version.
                                example: capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                                type: string
                              org:
                                description: The AWS Organization ID to use for image
                                  lookup.
                                type: string
                            type: object
                        type: object
                      iamInstanceProfile:
                        default: control-plane.cluster-api-provider-aws.sigs.k8s.io
                        description: The IAM instance profile to use for the cluster
                          Machines.
                        type: string
                      instanceType:
                        default: m5.xlarge
                        type: string
                    type: object
                type: object
              etcd:
                properties:
                  image:
                    description: Image required for overriding etcd image details.
                    properties:
                      repository:
                        description: Repository is used to override the image repository
                          to pull from.
                        pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                        type: string
                      tag:
                        description: Tag is used to override the default image tag.
                        pattern: ^[\w][\w.-]{0,127}$
                        type: string
                    type: object
                type: object
              extraAPIServerCertSANs:
                description: Extra Subject Alternative Names for the API Server signing
                  cert.
                items:
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                type: array
                uniqueItems: true
              globalImageRegistryMirror:
                description: GlobalImageRegistryMirror sets default mirror configuration
                  for all the image registries.
                properties:
                  credentials:
                    description: Credentials and CA certificate for the image registry
                      mirror
                    properties:
                      secretRef:
                        description: |-
                          A reference to the Secret containing the registry credentials and optional CA certificate
                          using the keys `username`, `password` and `ca.crt`.
                          This credentials Secret is not required for some registries, e.g. ECR.
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  url:
                    description: Registry mirror URL.
                    format: uri
                    pattern: ^https?://
                    type: string
                required:
                - url
                type: object
              imageRegistries:
                items:
                  properties:
                    credentials:
                      description: Credentials and CA certificate for the image registry
                      properties:
                        secretRef:
                          description: |-
                            A reference to the Secret containing the registry credentials and optional CA certificate
                            using the keys `username`, `password` and `ca.crt`.
                            This credentials Secret is not required for some registries, e.g. ECR.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    url:
                      description: Registry URL.
                      format: uri
                      pattern: ^https?://
                      type: string
                  required:
                  - url
                  type: object
                type: array
              kubernetesImageRepository:
                description: Sets the Kubernetes image repository used for the KubeadmControlPlane.
                pattern: ^((?:[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*|\[(?:[a-fA-F0-9:]+)\])(:[0-9]+)?/)?[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*(/[a-z0-9]+((?:[._]|__|[-]+)[a-z0-9]+)*)*$
                type: string
              proxy:
                description: HTTPProxy required for providing proxy configuration.
                properties:
                  additionalNo:
                    description: |-
                      AdditionalNo Proxy list that will be added to the automatically calculated
                      values that will apply no_proxy configuration for cluster internal network.
                      Default values: localhost,127.0.0.1,<POD_NETWORK>,<SERVICE_NETWORK>,kubernetes
                        ,kubernetes.default,.svc,.svc.<SERVICE_DOMAIN>
                    items:
                      type: string
                    type: array
                  http:
                    description: HTTP proxy value.
                    type: string
                  https:
                    description: HTTPS proxy value.
                    type: string
                type: object
              users:
                items:
                  description: User defines the input for a generated user in cloud-init.
                  properties:
                    hashedPassword:
                      description: |-
                        HashedPassword is a hashed password for the user, formatted as described
                        by the crypt(5) man page. See your distribution's documentation for
                        instructions to create a hashed password.
                        An empty string is not marshalled, because it is not a valid value.
                      type: string
                    name:
                      description: Name specifies the user name.
                      type: string
                    sshAuthorizedKeys:
                      description: |-
                        SSHAuthorizedKeys is a list of public SSH keys to write to the
                        machine. Use the corresponding private SSH keys to authenticate. See SSH
                        documentation for instructions to create a key pair.
                      items:
                        type: string
                      type: array
                    sudo:
                      description: |-
                        Sudo is a sudo user specification, formatted as described in the sudo
                        documentation.
                        An empty string is not marshalled, because it is not a valid value.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
